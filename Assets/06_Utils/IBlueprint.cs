//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/06_Utils/IBlueprint.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @IBlueprint: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @IBlueprint()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IBlueprint"",
    ""maps"": [
        {
            ""name"": ""ActionPlayer"",
            ""id"": ""f7b39ce4-4b84-4772-96f6-397de7e01139"",
            ""actions"": [
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""f60bbb98-e292-4beb-a430-b09757551fe2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnA"",
                    ""type"": ""Value"",
                    ""id"": ""24dedd00-c784-4da2-9d4c-24cd8f69a5a3"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnS"",
                    ""type"": ""Value"",
                    ""id"": ""b57d05f0-e0bb-43d9-be56-ce9019d2b985"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnZ"",
                    ""type"": ""Value"",
                    ""id"": ""2eb440c2-7544-4176-ba13-ee407eff526d"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnX"",
                    ""type"": ""Value"",
                    ""id"": ""48c1759d-b803-4f4e-9b2b-323245c15a65"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnC"",
                    ""type"": ""Value"",
                    ""id"": ""f7f6ee7e-67e3-49bc-ba27-9d6521f534ee"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerDash"",
                    ""type"": ""Button"",
                    ""id"": ""0d692acb-94f7-47de-bf9f-ab798f40e97f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerJump"",
                    ""type"": ""Button"",
                    ""id"": ""fd75acca-1d07-4ade-b3fd-ad40f81a5f22"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenSkill"",
                    ""type"": ""Button"",
                    ""id"": ""a5c7e41f-1049-40c6-85e8-5699b0771929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BtnNum1"",
                    ""type"": ""Button"",
                    ""id"": ""cf8e9204-0739-4d2c-a506-40157cba5702"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BtnNum2"",
                    ""type"": ""Value"",
                    ""id"": ""165d110f-57a5-4014-a5cf-f93f5d21992f"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnNum3"",
                    ""type"": ""Value"",
                    ""id"": ""4be03cc4-46a1-455a-9a23-e279ba53b977"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnNum4"",
                    ""type"": ""Value"",
                    ""id"": ""5043e8f7-5512-4da3-ab5b-0f240f6a959c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BtnNum5"",
                    ""type"": ""Value"",
                    ""id"": ""7b8f1c59-66b6-436d-86d9-182784c4b7d7"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""083baf5e-9323-4dcd-bdb3-f16e3e86df50"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dbc76bfd-8b53-491e-bc9f-4c3fd61f9823"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b51bf0ef-c293-42cb-b950-b9130515c14d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""511400b2-1d41-485c-b07d-4578033cd312"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5c711425-b785-4e2e-b4db-a1e6c094cad3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bb80c72b-ff6c-45de-8d3a-46c3c5e035b0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed67d54d-aeb8-4def-b20b-fea300eebc81"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""139cb705-70e9-48d6-9eb9-aa8b453471c4"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnZ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5f091bf-696b-4113-acde-329d05473136"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""236293b2-b70d-48fa-be6e-f0d4fe2daa3a"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6657cd46-14b0-4859-af72-79d2e6bec75f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9d0870f-5842-4d8c-a08c-d0ab49e4120e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerDash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f304caa-8282-4cff-b836-8a0fc3d06936"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ffc7b38-32d1-43d3-b91e-64aae0bc60a9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnNum2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a50ed5f-9519-4ff8-9328-53a590020fc7"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnNum1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ffcd269-5ec6-480e-9369-9864a9f8a80d"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnNum3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92338b16-1bb2-4edf-ad88-0dedb03e8451"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnNum4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a397254-81e0-4596-baea-7debc9911495"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BtnNum5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ActionPause"",
            ""id"": ""c4fa4748-64d6-4944-b292-700f94ac24d3"",
            ""actions"": [
                {
                    ""name"": ""MainMove"",
                    ""type"": ""Value"",
                    ""id"": ""35831e5b-b5b1-4fce-b481-b0c0e79c696f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MainPerform"",
                    ""type"": ""Button"",
                    ""id"": ""493d9790-e554-47c2-97a4-a5a24a2092a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainCancel"",
                    ""type"": ""Button"",
                    ""id"": ""75103889-8e4d-4bb3-8d7d-de645b5ed70a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""9428341e-9c75-4785-82d2-bcb409ee27ac"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse0"",
                    ""type"": ""Button"",
                    ""id"": ""4485b68f-2fe4-4b9e-adc6-f1c794618f19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse1"",
                    ""type"": ""Button"",
                    ""id"": ""ef6477d0-b092-4c0d-9d6e-efbd30e29d53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5dd27089-5e5a-4520-9d6f-c212539dfe6b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a272b878-632c-4e76-8674-2da7306c9815"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d8dc2e7c-237b-49ee-b65c-093d9b77bdc7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dc28f36c-d3b1-499c-8432-c73622e6409c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""02cb8647-d456-4249-94eb-795746293e0e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""05a03ff5-0fb5-47e4-b4b4-94ab889b0da3"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainPerform"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e64711e1-a9ed-40e1-b01c-5f67149fca56"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainPerform"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34641b81-b150-43b1-8d09-514f4674012e"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainCancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a1317a7-f2be-4949-a2e6-55dcd73e2411"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainCancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e38448a7-4eb9-40dd-927d-16597edadd70"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaff3669-30ec-4c34-a871-24a52dc6bacf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb09edc4-fcad-46f2-9d53-ba9749a45520"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ActionSeq"",
            ""id"": ""7a8d5112-9fa3-45c7-bfcc-74efb8cde2e9"",
            ""actions"": [
                {
                    ""name"": ""OnSeqPlay"",
                    ""type"": ""Button"",
                    ""id"": ""2c63158f-17a1-4abd-816f-1129a7a22247"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7da037b3-7611-4808-9ee9-f00a8f56f5d4"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnSeqPlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionPlayer
        m_ActionPlayer = asset.FindActionMap("ActionPlayer", throwIfNotFound: true);
        m_ActionPlayer_PlayerMove = m_ActionPlayer.FindAction("PlayerMove", throwIfNotFound: true);
        m_ActionPlayer_BtnA = m_ActionPlayer.FindAction("BtnA", throwIfNotFound: true);
        m_ActionPlayer_BtnS = m_ActionPlayer.FindAction("BtnS", throwIfNotFound: true);
        m_ActionPlayer_BtnZ = m_ActionPlayer.FindAction("BtnZ", throwIfNotFound: true);
        m_ActionPlayer_BtnX = m_ActionPlayer.FindAction("BtnX", throwIfNotFound: true);
        m_ActionPlayer_BtnC = m_ActionPlayer.FindAction("BtnC", throwIfNotFound: true);
        m_ActionPlayer_PlayerDash = m_ActionPlayer.FindAction("PlayerDash", throwIfNotFound: true);
        m_ActionPlayer_PlayerJump = m_ActionPlayer.FindAction("PlayerJump", throwIfNotFound: true);
        m_ActionPlayer_OpenSkill = m_ActionPlayer.FindAction("OpenSkill", throwIfNotFound: true);
        m_ActionPlayer_BtnNum1 = m_ActionPlayer.FindAction("BtnNum1", throwIfNotFound: true);
        m_ActionPlayer_BtnNum2 = m_ActionPlayer.FindAction("BtnNum2", throwIfNotFound: true);
        m_ActionPlayer_BtnNum3 = m_ActionPlayer.FindAction("BtnNum3", throwIfNotFound: true);
        m_ActionPlayer_BtnNum4 = m_ActionPlayer.FindAction("BtnNum4", throwIfNotFound: true);
        m_ActionPlayer_BtnNum5 = m_ActionPlayer.FindAction("BtnNum5", throwIfNotFound: true);
        // ActionPause
        m_ActionPause = asset.FindActionMap("ActionPause", throwIfNotFound: true);
        m_ActionPause_MainMove = m_ActionPause.FindAction("MainMove", throwIfNotFound: true);
        m_ActionPause_MainPerform = m_ActionPause.FindAction("MainPerform", throwIfNotFound: true);
        m_ActionPause_MainCancel = m_ActionPause.FindAction("MainCancel", throwIfNotFound: true);
        m_ActionPause_MousePosition = m_ActionPause.FindAction("MousePosition", throwIfNotFound: true);
        m_ActionPause_Mouse0 = m_ActionPause.FindAction("Mouse0", throwIfNotFound: true);
        m_ActionPause_Mouse1 = m_ActionPause.FindAction("Mouse1", throwIfNotFound: true);
        // ActionSeq
        m_ActionSeq = asset.FindActionMap("ActionSeq", throwIfNotFound: true);
        m_ActionSeq_OnSeqPlay = m_ActionSeq.FindAction("OnSeqPlay", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionPlayer
    private readonly InputActionMap m_ActionPlayer;
    private List<IActionPlayerActions> m_ActionPlayerActionsCallbackInterfaces = new List<IActionPlayerActions>();
    private readonly InputAction m_ActionPlayer_PlayerMove;
    private readonly InputAction m_ActionPlayer_BtnA;
    private readonly InputAction m_ActionPlayer_BtnS;
    private readonly InputAction m_ActionPlayer_BtnZ;
    private readonly InputAction m_ActionPlayer_BtnX;
    private readonly InputAction m_ActionPlayer_BtnC;
    private readonly InputAction m_ActionPlayer_PlayerDash;
    private readonly InputAction m_ActionPlayer_PlayerJump;
    private readonly InputAction m_ActionPlayer_OpenSkill;
    private readonly InputAction m_ActionPlayer_BtnNum1;
    private readonly InputAction m_ActionPlayer_BtnNum2;
    private readonly InputAction m_ActionPlayer_BtnNum3;
    private readonly InputAction m_ActionPlayer_BtnNum4;
    private readonly InputAction m_ActionPlayer_BtnNum5;
    public struct ActionPlayerActions
    {
        private @IBlueprint m_Wrapper;
        public ActionPlayerActions(@IBlueprint wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMove => m_Wrapper.m_ActionPlayer_PlayerMove;
        public InputAction @BtnA => m_Wrapper.m_ActionPlayer_BtnA;
        public InputAction @BtnS => m_Wrapper.m_ActionPlayer_BtnS;
        public InputAction @BtnZ => m_Wrapper.m_ActionPlayer_BtnZ;
        public InputAction @BtnX => m_Wrapper.m_ActionPlayer_BtnX;
        public InputAction @BtnC => m_Wrapper.m_ActionPlayer_BtnC;
        public InputAction @PlayerDash => m_Wrapper.m_ActionPlayer_PlayerDash;
        public InputAction @PlayerJump => m_Wrapper.m_ActionPlayer_PlayerJump;
        public InputAction @OpenSkill => m_Wrapper.m_ActionPlayer_OpenSkill;
        public InputAction @BtnNum1 => m_Wrapper.m_ActionPlayer_BtnNum1;
        public InputAction @BtnNum2 => m_Wrapper.m_ActionPlayer_BtnNum2;
        public InputAction @BtnNum3 => m_Wrapper.m_ActionPlayer_BtnNum3;
        public InputAction @BtnNum4 => m_Wrapper.m_ActionPlayer_BtnNum4;
        public InputAction @BtnNum5 => m_Wrapper.m_ActionPlayer_BtnNum5;
        public InputActionMap Get() { return m_Wrapper.m_ActionPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionPlayerActions set) { return set.Get(); }
        public void AddCallbacks(IActionPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionPlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionPlayerActionsCallbackInterfaces.Add(instance);
            @PlayerMove.started += instance.OnPlayerMove;
            @PlayerMove.performed += instance.OnPlayerMove;
            @PlayerMove.canceled += instance.OnPlayerMove;
            @BtnA.started += instance.OnBtnA;
            @BtnA.performed += instance.OnBtnA;
            @BtnA.canceled += instance.OnBtnA;
            @BtnS.started += instance.OnBtnS;
            @BtnS.performed += instance.OnBtnS;
            @BtnS.canceled += instance.OnBtnS;
            @BtnZ.started += instance.OnBtnZ;
            @BtnZ.performed += instance.OnBtnZ;
            @BtnZ.canceled += instance.OnBtnZ;
            @BtnX.started += instance.OnBtnX;
            @BtnX.performed += instance.OnBtnX;
            @BtnX.canceled += instance.OnBtnX;
            @BtnC.started += instance.OnBtnC;
            @BtnC.performed += instance.OnBtnC;
            @BtnC.canceled += instance.OnBtnC;
            @PlayerDash.started += instance.OnPlayerDash;
            @PlayerDash.performed += instance.OnPlayerDash;
            @PlayerDash.canceled += instance.OnPlayerDash;
            @PlayerJump.started += instance.OnPlayerJump;
            @PlayerJump.performed += instance.OnPlayerJump;
            @PlayerJump.canceled += instance.OnPlayerJump;
            @OpenSkill.started += instance.OnOpenSkill;
            @OpenSkill.performed += instance.OnOpenSkill;
            @OpenSkill.canceled += instance.OnOpenSkill;
            @BtnNum1.started += instance.OnBtnNum1;
            @BtnNum1.performed += instance.OnBtnNum1;
            @BtnNum1.canceled += instance.OnBtnNum1;
            @BtnNum2.started += instance.OnBtnNum2;
            @BtnNum2.performed += instance.OnBtnNum2;
            @BtnNum2.canceled += instance.OnBtnNum2;
            @BtnNum3.started += instance.OnBtnNum3;
            @BtnNum3.performed += instance.OnBtnNum3;
            @BtnNum3.canceled += instance.OnBtnNum3;
            @BtnNum4.started += instance.OnBtnNum4;
            @BtnNum4.performed += instance.OnBtnNum4;
            @BtnNum4.canceled += instance.OnBtnNum4;
            @BtnNum5.started += instance.OnBtnNum5;
            @BtnNum5.performed += instance.OnBtnNum5;
            @BtnNum5.canceled += instance.OnBtnNum5;
        }

        private void UnregisterCallbacks(IActionPlayerActions instance)
        {
            @PlayerMove.started -= instance.OnPlayerMove;
            @PlayerMove.performed -= instance.OnPlayerMove;
            @PlayerMove.canceled -= instance.OnPlayerMove;
            @BtnA.started -= instance.OnBtnA;
            @BtnA.performed -= instance.OnBtnA;
            @BtnA.canceled -= instance.OnBtnA;
            @BtnS.started -= instance.OnBtnS;
            @BtnS.performed -= instance.OnBtnS;
            @BtnS.canceled -= instance.OnBtnS;
            @BtnZ.started -= instance.OnBtnZ;
            @BtnZ.performed -= instance.OnBtnZ;
            @BtnZ.canceled -= instance.OnBtnZ;
            @BtnX.started -= instance.OnBtnX;
            @BtnX.performed -= instance.OnBtnX;
            @BtnX.canceled -= instance.OnBtnX;
            @BtnC.started -= instance.OnBtnC;
            @BtnC.performed -= instance.OnBtnC;
            @BtnC.canceled -= instance.OnBtnC;
            @PlayerDash.started -= instance.OnPlayerDash;
            @PlayerDash.performed -= instance.OnPlayerDash;
            @PlayerDash.canceled -= instance.OnPlayerDash;
            @PlayerJump.started -= instance.OnPlayerJump;
            @PlayerJump.performed -= instance.OnPlayerJump;
            @PlayerJump.canceled -= instance.OnPlayerJump;
            @OpenSkill.started -= instance.OnOpenSkill;
            @OpenSkill.performed -= instance.OnOpenSkill;
            @OpenSkill.canceled -= instance.OnOpenSkill;
            @BtnNum1.started -= instance.OnBtnNum1;
            @BtnNum1.performed -= instance.OnBtnNum1;
            @BtnNum1.canceled -= instance.OnBtnNum1;
            @BtnNum2.started -= instance.OnBtnNum2;
            @BtnNum2.performed -= instance.OnBtnNum2;
            @BtnNum2.canceled -= instance.OnBtnNum2;
            @BtnNum3.started -= instance.OnBtnNum3;
            @BtnNum3.performed -= instance.OnBtnNum3;
            @BtnNum3.canceled -= instance.OnBtnNum3;
            @BtnNum4.started -= instance.OnBtnNum4;
            @BtnNum4.performed -= instance.OnBtnNum4;
            @BtnNum4.canceled -= instance.OnBtnNum4;
            @BtnNum5.started -= instance.OnBtnNum5;
            @BtnNum5.performed -= instance.OnBtnNum5;
            @BtnNum5.canceled -= instance.OnBtnNum5;
        }

        public void RemoveCallbacks(IActionPlayerActions instance)
        {
            if (m_Wrapper.m_ActionPlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionPlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionPlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionPlayerActions @ActionPlayer => new ActionPlayerActions(this);

    // ActionPause
    private readonly InputActionMap m_ActionPause;
    private List<IActionPauseActions> m_ActionPauseActionsCallbackInterfaces = new List<IActionPauseActions>();
    private readonly InputAction m_ActionPause_MainMove;
    private readonly InputAction m_ActionPause_MainPerform;
    private readonly InputAction m_ActionPause_MainCancel;
    private readonly InputAction m_ActionPause_MousePosition;
    private readonly InputAction m_ActionPause_Mouse0;
    private readonly InputAction m_ActionPause_Mouse1;
    public struct ActionPauseActions
    {
        private @IBlueprint m_Wrapper;
        public ActionPauseActions(@IBlueprint wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainMove => m_Wrapper.m_ActionPause_MainMove;
        public InputAction @MainPerform => m_Wrapper.m_ActionPause_MainPerform;
        public InputAction @MainCancel => m_Wrapper.m_ActionPause_MainCancel;
        public InputAction @MousePosition => m_Wrapper.m_ActionPause_MousePosition;
        public InputAction @Mouse0 => m_Wrapper.m_ActionPause_Mouse0;
        public InputAction @Mouse1 => m_Wrapper.m_ActionPause_Mouse1;
        public InputActionMap Get() { return m_Wrapper.m_ActionPause; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionPauseActions set) { return set.Get(); }
        public void AddCallbacks(IActionPauseActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionPauseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionPauseActionsCallbackInterfaces.Add(instance);
            @MainMove.started += instance.OnMainMove;
            @MainMove.performed += instance.OnMainMove;
            @MainMove.canceled += instance.OnMainMove;
            @MainPerform.started += instance.OnMainPerform;
            @MainPerform.performed += instance.OnMainPerform;
            @MainPerform.canceled += instance.OnMainPerform;
            @MainCancel.started += instance.OnMainCancel;
            @MainCancel.performed += instance.OnMainCancel;
            @MainCancel.canceled += instance.OnMainCancel;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @Mouse0.started += instance.OnMouse0;
            @Mouse0.performed += instance.OnMouse0;
            @Mouse0.canceled += instance.OnMouse0;
            @Mouse1.started += instance.OnMouse1;
            @Mouse1.performed += instance.OnMouse1;
            @Mouse1.canceled += instance.OnMouse1;
        }

        private void UnregisterCallbacks(IActionPauseActions instance)
        {
            @MainMove.started -= instance.OnMainMove;
            @MainMove.performed -= instance.OnMainMove;
            @MainMove.canceled -= instance.OnMainMove;
            @MainPerform.started -= instance.OnMainPerform;
            @MainPerform.performed -= instance.OnMainPerform;
            @MainPerform.canceled -= instance.OnMainPerform;
            @MainCancel.started -= instance.OnMainCancel;
            @MainCancel.performed -= instance.OnMainCancel;
            @MainCancel.canceled -= instance.OnMainCancel;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @Mouse0.started -= instance.OnMouse0;
            @Mouse0.performed -= instance.OnMouse0;
            @Mouse0.canceled -= instance.OnMouse0;
            @Mouse1.started -= instance.OnMouse1;
            @Mouse1.performed -= instance.OnMouse1;
            @Mouse1.canceled -= instance.OnMouse1;
        }

        public void RemoveCallbacks(IActionPauseActions instance)
        {
            if (m_Wrapper.m_ActionPauseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionPauseActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionPauseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionPauseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionPauseActions @ActionPause => new ActionPauseActions(this);

    // ActionSeq
    private readonly InputActionMap m_ActionSeq;
    private List<IActionSeqActions> m_ActionSeqActionsCallbackInterfaces = new List<IActionSeqActions>();
    private readonly InputAction m_ActionSeq_OnSeqPlay;
    public struct ActionSeqActions
    {
        private @IBlueprint m_Wrapper;
        public ActionSeqActions(@IBlueprint wrapper) { m_Wrapper = wrapper; }
        public InputAction @OnSeqPlay => m_Wrapper.m_ActionSeq_OnSeqPlay;
        public InputActionMap Get() { return m_Wrapper.m_ActionSeq; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionSeqActions set) { return set.Get(); }
        public void AddCallbacks(IActionSeqActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionSeqActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionSeqActionsCallbackInterfaces.Add(instance);
            @OnSeqPlay.started += instance.OnOnSeqPlay;
            @OnSeqPlay.performed += instance.OnOnSeqPlay;
            @OnSeqPlay.canceled += instance.OnOnSeqPlay;
        }

        private void UnregisterCallbacks(IActionSeqActions instance)
        {
            @OnSeqPlay.started -= instance.OnOnSeqPlay;
            @OnSeqPlay.performed -= instance.OnOnSeqPlay;
            @OnSeqPlay.canceled -= instance.OnOnSeqPlay;
        }

        public void RemoveCallbacks(IActionSeqActions instance)
        {
            if (m_Wrapper.m_ActionSeqActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionSeqActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionSeqActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionSeqActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionSeqActions @ActionSeq => new ActionSeqActions(this);
    public interface IActionPlayerActions
    {
        void OnPlayerMove(InputAction.CallbackContext context);
        void OnBtnA(InputAction.CallbackContext context);
        void OnBtnS(InputAction.CallbackContext context);
        void OnBtnZ(InputAction.CallbackContext context);
        void OnBtnX(InputAction.CallbackContext context);
        void OnBtnC(InputAction.CallbackContext context);
        void OnPlayerDash(InputAction.CallbackContext context);
        void OnPlayerJump(InputAction.CallbackContext context);
        void OnOpenSkill(InputAction.CallbackContext context);
        void OnBtnNum1(InputAction.CallbackContext context);
        void OnBtnNum2(InputAction.CallbackContext context);
        void OnBtnNum3(InputAction.CallbackContext context);
        void OnBtnNum4(InputAction.CallbackContext context);
        void OnBtnNum5(InputAction.CallbackContext context);
    }
    public interface IActionPauseActions
    {
        void OnMainMove(InputAction.CallbackContext context);
        void OnMainPerform(InputAction.CallbackContext context);
        void OnMainCancel(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouse0(InputAction.CallbackContext context);
        void OnMouse1(InputAction.CallbackContext context);
    }
    public interface IActionSeqActions
    {
        void OnOnSeqPlay(InputAction.CallbackContext context);
    }
}
